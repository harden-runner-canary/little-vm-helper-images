# syntax=docker/dockerfile:1.3-labs
# vim: set ft=dockerfile:

FROM quay.io/lvh-images/lvh:v0.0.19 AS lvh

FROM fedora:latest AS builder

COPY --from=lvh /usr/bin/lvh /usr/bin/lvh

# Install dependencies for kernel building
RUN dnf install -y fedpkg

FROM builder AS prepare

WORKDIR /tmp

# Download the Bottlerocket kernel source RPM
RUN curl -LO "https://cdn.amazonlinux.com/al2023/blobstore/bc929cd6c35e297ebc5760d75997d219080501a32b7936641003178bce778074/kernel-6.1.102-111.182.amzn2023.src.rpm"

# Extract the kernel source
RUN rpm -ivh kernel*.src.rpm

RUN ls -lah
WORKDIR /root/rpmbuild/SPECS
RUN ls -lah

# Install build dependencies for the kernel spec file
RUN dnf builddep -y --define '_with_baseonly 1' kernel.spec

# Prepare the kernel source tree
# RUN rpmbuild -bp kernel.spec --with baseonly

# # Link the kernel source directory to a common path
# RUN ln -s /root/rpmbuild/BUILD/kernel-*/linux-* /tmp/build
# WORKDIR /tmp/build

# # Clean and prepare for configuration
# RUN make -s mrproper

# # Copy the default Bottlerocket kernel configuration
# RUN cp configs/kernel-*-$(uname -m).config .config

# # Configure the kernel for Bottlerocket
# COPY _data /data
# RUN lvh kernels --dir /data raw_configure . bottlerocket61102 2>&1

FROM prepare AS build

# Compile the kernel and generate a tarball
RUN make -j $(nproc) tar-pkg

# Generate BTF debug information for eBPF compatibility
COPY scripts/generate-btf.sh /tmp/
RUN /tmp/generate-btf.sh /tmp/build/tar-install

FROM busybox as kernel

# Copy the built kernel tarball to the final image
COPY --from=build /tmp/build/tar-install /data/kernels/bottlerocket61102